From 102b32be075e4181e578598a418574ee045d4016 Mon Sep 17 00:00:00 2001
From: Hieu Doan <hieudoanmanh.it@gmail.com>
Date: Mon, 15 Jul 2024 23:40:28 +0700
Subject: [PATCH] update function and unit test

---
 client3.py     | 10 ++++--
 client_test.py | 94 ++++++++++++++++++++++++++++++++++++++++++--------
 2 files changed, 87 insertions(+), 17 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..821458b 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,16 @@ def getDataPoint(quote):
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price + ask_price) / 2
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
     """ ------------- Update this function ------------- """
-    return 1
+    if price_b == 0:
+        return
+    return price_a / price_b
 
 
 # Main
@@ -52,8 +54,10 @@ if __name__ == "__main__":
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
         """ ----------- Update to get the ratio --------------- """
+        prices = {}
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock] = price
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-        print("Ratio %s" % getRatio(price, price))
+        print("Ratio %s" % getRatio(prices["ABC"], prices["DEF"]))
diff --git a/client_test.py b/client_test.py
index af2bf26..7ac3384 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,24 +1,90 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio
+
 
 class ClientTest(unittest.TestCase):
-  def test_getDataPoint_calculatePrice(self):
-    quotes = [
-      {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-    ]
-    """ ------------ Add the assertion below ------------ """
+    def test_getDataPoint_calculatePrice(self):
+        quotes = [
+            {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+            {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+        ]
+        """ ------------ Add the assertion below ------------ """
+        for quote in quotes:
+            self.assertEqual(
+                getDataPoint(quote),
+                (
+                    quote['stock'],
+                    quote['top_bid']['price'],
+                    quote['top_ask']['price'],
+                    (quote['top_bid']['price'] + quote['top_ask']['price']) / 2
+                )
+            )
 
-  def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
-    quotes = [
-      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-    ]
-    """ ------------ Add the assertion below ------------ """
+    def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
+        quotes = [
+            {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+            {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+        ]
+        """ ------------ Add the assertion below ------------ """
+        for quote in quotes:
+            self.assertEqual(
+                getDataPoint(quote),
+                (
+                    quote['stock'],
+                    quote['top_bid']['price'],
+                    quote['top_ask']['price'],
+                    (quote['top_bid']['price'] + quote['top_ask']['price']) / 2
+                )
+            )
 
+    """ ------------ Add more unit tests ------------ """
 
-  """ ------------ Add more unit tests ------------ """
+    def test_getDataPoint_calculatePriceAskGreaterThanBid(self):
+        quotes = [
+            {'top_ask': {'price': 120.48, 'size': 109}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': 119.2, 'size': 36}, 'id': '0.109974697771', 'stock': 'ABC'},
+            {'top_ask': {'price': 117.87, 'size': 81}, 'timestamp': '2019-02-11 22:06:30.572453',
+             'top_bid': {'price': 121.68, 'size': 4}, 'id': '0.109974697771', 'stock': 'DEF'}
+        ]
+        """ ------------ Add the assertion below ------------ """
+        for quote in quotes:
+            self.assertEqual(
+                getDataPoint(quote),
+                (
+                    quote['stock'],
+                    quote['top_bid']['price'],
+                    quote['top_ask']['price'],
+                    (quote['top_bid']['price'] + quote['top_ask']['price']) / 2
+                )
+            )
 
+    def test_getRatio(self):
+        pair_prices = [
+            {
+                'price_a': 1,
+                'price_b': 2,
+                'ratio': 0.5
+            },
+            {
+                'price_a': 1,
+                'price_b': 0,
+                'ratio': None
+            },
+            {
+                'price_a': 2,
+                'price_b': 0.5,
+                'ratio': 4
+            },
+        ]
+        for pair in pair_prices:
+            self.assertEqual(
+                getRatio(pair['price_a'], pair['price_b']),
+                pair['ratio']
+            )
 
 
 if __name__ == '__main__':
-- 
2.40.1

